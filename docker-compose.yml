services:
    server:
        depends_on:
            - mongo
            - rabbitmq
        restart: on-failure
        build:
            context: .
            dockerfile: server.Dockerfile
        container_name: server
        ports:
            - '80:80'
        environment:
            - PORT=80
        env_file: ./.env
        volumes:
            - app-data:/app
    labels-consumer:
        depends_on:
            - mongo
            - rabbitmq
            - server
        restart: on-failure
        build:
            context: .
            dockerfile: labels-consumer.Dockerfile
        container_name: labels-consumer
        env_file: ./.env
        volumes:
            - app-data:/app
    observations-consumer:
        depends_on:
            - mongo
            - rabbitmq
            - server
        restart: on-failure
        build:
            context: .
            dockerfile: observations-consumer.Dockerfile
        container_name: observations-consumer
        env_file: ./.env
        volumes:
            - app-data:/app
            - ./api/data/elevation:/app/api/data/elevation
    mongo:
        image: 'mongo:latest'
        restart: always
        container_name: 'mongo'
        ports:
            - '27017:27017'
        env_file: ./.env
        volumes:
            - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    rabbitmq:
        image: 'rabbitmq:management'
        container_name: 'rabbitmq'
        ports:
            - '5672:5672'
            - '15672:15672'
        env_file: ./.env
volumes:
    app-data: